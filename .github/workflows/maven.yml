# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 16
      uses: actions/setup-java@v2
      with:
        java-version: '16'
        distribution: 'adopt'
        cache: maven

    - name: Delete Properties
      run: rm -R src/main/resources/application.properties

    - name: Bind Properties
      run:
        touch src/main/resources/application.properties &&
        echo spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect >> src/main/resources/application.properties  &&
        echo spring.jpa.hibernate.ddl-auto = update >> src/main/resources/application.properties  &&
        echo spring.datasource.url = ${{ secrets.DATABASE_URL }} >> src/main/resources/application.properties  &&
        echo spring.datasource.username = ${{ secrets.DB_USERNAME }} >> src/main/resources/application.properties  &&
        echo spring.datasource.password = ${{ secrets.DB_PASSWORD }} >> src/main/resources/application.properties  &&
        echo spring.jpa.properties.javax.persistence.validation.mode = none >> src/main/resources/application.properties  &&
        echo server.port = ${{ secrets.SERVER_PORT }} >> src/main/resources/application.properties  &&
        echo spring.jpa.show-sql = true >> src/main/resources/application.properties  &&
        echo jwt.secret = ${{ secrets.JWT_SECRET }} >> src/main/resources/application.properties &&
        echo spring.mail.host = ${{ secrets.MAIL_HOST }} >> src/main/resources/application.properties &&
        echo spring.mail.port = ${{ secrets.MAIL_PORT }} >> src/main/resources/application.properties &&
        echo spring.mail.username = ${{ secrets.MAIL_USERNAME }} >> src/main/resources/application.properties &&
        echo spring.mail.password = ${{ secrets.MAIL_PASSWORD }} >> src/main/resources/application.properties &&
        echo project.host = springshop.tk >> src/main/resources/application.properties

    - name: Build with Maven
      run: mvn package -Dmaven.test.skip

    - name: Copy file via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.SSH_HOST }}
        USERNAME: ${{ secrets.SSH_USER }}
        PORT: 22
        KEY: ${{ secrets.SSH_KEY }}
      with:
        source: "."
        target: "/home/ubuntu/workspace/shop"

    - name: Restart Service via Ssh
      uses: appleboy/ssh-action@master
      env:
        HOST: ${{ secrets.SSH_HOST }}
        USERNAME: ${{ secrets.SSH_USER }}
        PORT: 22
        KEY: ${{ secrets.SSH_KEY }}
        SCRIPT: sudo systemctl restart shop

